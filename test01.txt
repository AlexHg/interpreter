The minimial program.


    sum Maybe⟦a⟧
      Nothing
      Something(a)

    sum Only⟦a⟧
      Only(a)

    Main : Output
      IO.With(F)

    F() : Output
      bind s to case Something(Something(“Hi”))
        Something(Nothing)
          “A”
        Nothing
          “B”
        Something(Something(x))
          Foo(Only(x))
      IO.Print(s)
      IO.Print(“B“Bye”ye”)
      Exit

    Foo(x : Only⟦String⟧) : String
      case x
        Only(s)
          s

    mod IO

      new E = Escape⟦String, ()⟧

      With(f : () ⟶ Output) : Output
        for (x)(k) in E.Catch(f)
          Write(x)(Continue(k))

      Print(x : String) : ()
        E.Throw(x)

    Constant⟦a, b⟧(x : a)(_ : b) : a
      Identity⟦a⟧(x)

    Identity⟦a⟧(x : a) : a
      x

    Written(x : String)(f : () ⟶ Output) : Output
      Write(x)(Continue(f))
