-- Throw(tag : Tag⟦a, b⟧)(x : a) : b
-- Catch(tag : Tag⟦a, b⟧, f : () ⟶ c)(g : a ⟶ (b ⟶ c) ⟶ c) : c
-- Unreachable : a
-- Exit : Output

new T : Tag⟦(), Bool⟧


sum Bool
  False
  True

Main() : Output
  bind (x, y) : ((), ()) to (Unreachable, Unreachable)
  Exit

Z⟦a⟧(x : a) : ()
  Z(x, x)

K() : Output
  bind x to Get(T)
  Exit

With⟦a, b⟧(t : Tag⟦(), a⟧, x : a)(k : () ⟶ b) : b
  Handle(t, k)(C(x))

Get⟦a⟧(t : Tag⟦(), a⟧) : a
  Throw(t)()

C⟦a, b⟧(x : a)(_ : ())(f : a ⟶ b) : b
  f(x)

-- sum List⟦a⟧
--   Nil
--   Cons(a, List⟦a⟧)